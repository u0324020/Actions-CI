name: CI

on: [push, workflow_dispatch]

jobs:
  ci:
    runs-on: ubuntu-latest
    env:
      RELEASE_PACKAGE_NAME: DemoPkg
    steps:
    - name: Clean Workspace
      uses: AutoModality/action-clean@v1.1.0

    - uses: actions/checkout@v2

    # - name: Super-Linter
    #   uses: github/super-linter@v4
    #   env:
    #       VALIDATE_ALL_CODEBASE: false # scan change parts
    #       DEFAULT_BRANCH: main
    #       GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
    #       VALIDATE_GO: true
    #       VALIDATE_DOCKERFILE: true

    - uses: actions/setup-go@v2
      with:
        go-version: '^1.13.1'
        
    - name: check go version
      run: go version

    - name: install gotestsum
      run: go get -u gotest.tools/gotestsum

    - name: unit test
      run: gotestsum --junitfile unit-tests.xml

    - name: Publish unit test results
      uses: EnricoMi/publish-unit-test-result-action@v1
      if: always()
      with:
        files: '*.xml'
        report_individual_runs: "true"

    - name: build code
      run: go build main.go
      
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.4
      with:
        name: artifact
        path: main

    - name: Docker Hub login
      uses: azure/docker-login@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker Image
      run: docker build . -t ${{ secrets.DOCKER_USERNAME }}/janedockerrepo:${{ github.sha }}
      
    - name: scan code
      uses: Azure/container-scan@v0.1
      with:
        image-name: ${{ secrets.DOCKER_USERNAME }}/janedockerrepo:${{ github.sha }}

    - name: Push Docker Image to Registry
      run: docker push ${{ secrets.DOCKER_USERNAME }}/janedockerrepo:${{ github.sha }}

#====>CD

  cd:
    runs-on: ubuntu-latest
    needs: ci
    steps:

    - uses: actions/download-artifact@v2
      with:
        name: artifact

    #### sops 
    #### get eks credential

    - name: Install Helm
      uses: azure/setup-helm@v1
      with:
        version: v3.4.0

    - name: check helm template
      run: |
        helm repo add stable https://kubernetes-charts.storage.googleapis.com
        helm repo update
        helm template demo-service charts -f charts/stg_ap_southeast_1_values.yml

    - name: helm install
      run: helm install demo-service charts --debug --timeout 180s --namespace default --values charts/stg_ap_southeast_1_values.yml

    - name: check helm
      run: helm list

    # 
    # - name: create helm
    #   run: |
    #     helm create demo-service
    # - name: Configure git
    #   run: |
    #     git config --global user.name "${{ env.GIT_USERNAME }}"
    #     git config --global user.email "${{ env.GIT_EMAIL }}"
    # - name: Add dependency chart repos
    #   run: |
    #     helm repo add stable https://charts.helm.sh/stable
    # - name: Run chart-releaser
    #   uses: helm/chart-releaser-action@v1.0.0
    #   env:
    #     CR_TOKEN: "${{ secrets.GIT_TOKEN }}"
    # - name: Configure HELM repos
    #   run: |-
    #        helm repo add stable https://charts.helm.sh/stable
    #        helm repo add bitnami https://charts.bitnami.com/bitnami
    #        helm dependency list ./helm/defectdojo
    #        helm dependency update ./helm/defectdojo
    
