name: CI

on: [push, workflow_dispatch]

jobs:
  setup:
    runs-on: ubuntu-latest
    env:
      EXE_NAME: Demo
      RELEASE_PACKAGE_NAME: DemoPkg
    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-go@v2
      with:
        go-version: '^1.13.1' # The Go version to download (if necessary) and use.
        
    - name: check go version
      run: go version

    - name: install gotestsum
      run: go get -u gotest.tools/gotestsum

    - name: unit test
      run: gotestsum --junitfile unit-tests.xml

    - name: Publish unit test results
      uses: EnricoMi/publish-unit-test-result-action@v1
      if: always()
      with:
        files: '*.xml'
        report_individual_runs: "true"

    - name: build code
      run: go build main.go -o /out/${{ env.EXE_NAME }}
    
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.4
      with:
        name: artifact
        path: /out/${{ env.EXE_NAME }}

    - name: Docker Hub login
      uses: azure/docker-login@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker Image
      run: docker build . -t ${{ secrets.DOCKER_USERNAME }}/janedockerrepo:${{ github.sha }}
      
    - name: scan code
      uses: Azure/container-scan@v0.1
      with:
        image-name: ${{ secrets.DOCKER_USERNAME }}/janedockerrepo:${{ github.sha }}

    - name: Push Docker Image to Registry
      run: docker push ${{ secrets.DOCKER_USERNAME }}/janedockerrepo:${{ github.sha }}
      
    - name: Compress release package
      run: |
        mv out/${{ env.EXE_NAME }} ${{ env.EXE_NAME }}
        zip -r ${{ env.RELEASE_PACKAGE_NAME }}.zip
      
    - name: create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: upload release asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.RELEASE_PACKAGE_NAME }}.zip
        asset_name: ${{ env.RELEASE_PACKAGE_NAME }}.zip
        asset_content_type: application/zip
