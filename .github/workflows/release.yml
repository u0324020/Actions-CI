name: Release

on: push

jobs:
  # job for release
  release-job:
    runs-on: ubuntu-latest
    env:
      # release package name
      RELEASE_PACKAGE_NAME: demo-pkg
      # release tag version
      TAG_VERSION: v1.0.0
    steps:
      # sync repo
      - uses: actions/checkout@v2
      
      # for "release-job" upload release --merge only
      - name: compress release package
        # set id for inner-job refer
        id: release-package
        run: | # zip and set an action's output parameter
          zip -r ${{ env.RELEASE_PACKAGE_NAME }}.zip .

#       # create release tag
#       - name: create release
#         # set id for inner-job refer
#         id: create_release
#         uses: actions/create-release@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
#         with:
#           tag_name: ${{ env.TAG_VERSION }}
#           release_name: Release ${{ env.TAG_VERSION }}
#           draft: false
#           prerelease: false
          
      - uses: ncipollo/release-action@v1
        with:
          allowUpdates: True
          artifacts: ${{ env.RELEASE_PACKAGE_NAME }}.zip
          artifactContentType: application/zip
          name: Release ${{ env.TAG_VERSION }}
          tag: ${{ env.TAG_VERSION }}
          token: ${{ secrets.GIT_TOKEN }}

        
#       # upload release zip file
#       - name: upload release asset
#         id: upload-release-asset
#         uses: actions/upload-release-asset@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
#         with:
#           # refer to another step id
#           upload_url: ${{ steps.create_release.outputs.upload_url }}
#           # refer to another job output
#           asset_path: ${{ env.RELEASE_PACKAGE_NAME }}.zip
#           asset_name: ${{ env.RELEASE_PACKAGE_NAME }}.zip
#           asset_content_type: application/zip

